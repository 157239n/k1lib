+------------------------------------------+---------------------------+------------------------------+-------------------------------+----------------------------------+
| structural                               | conv                      | utils                        | filt                          | modifier                         |
+==========================================+===========================+==============================+===============================+==================================+
| :class:`~structural.transpose`           | :class:`~conv.toStr`      | :class:`~utils.size`         | :class:`~filt.filt`           | :class:`~modifier.applyS`        |
+------------------------------------------+---------------------------+------------------------------+-------------------------------+----------------------------------+
| :class:`~structural.reshape`             | :class:`~conv.toNumpy`    | :class:`~utils.shape`        | :meth:`~filt.inSet`           | :class:`~modifier.aS`            |
+------------------------------------------+---------------------------+------------------------------+-------------------------------+----------------------------------+
| :class:`~structural.insert`              | :class:`~conv.toTensor`   | :class:`~utils.item`         | :meth:`~filt.contains`        | :class:`~modifier.apply`         |
+------------------------------------------+---------------------------+------------------------------+-------------------------------+----------------------------------+
| :class:`~structural.splitW`              | :class:`~conv.toList`     | :class:`~utils.iden`         | :class:`~filt.empty`          | :class:`~modifier.applyMp`       |
+------------------------------------------+---------------------------+------------------------------+-------------------------------+----------------------------------+
| :class:`~structural.joinStreams`         | :class:`~conv.toSet`      | :class:`~utils.join`         | :meth:`~filt.isNumeric`       | :class:`~modifier.parallel`      |
+------------------------------------------+---------------------------+------------------------------+-------------------------------+----------------------------------+
| :meth:`~structural.yieldSentinel`        | :class:`~conv.toIter`     | :class:`~utils.wrapList`     | :meth:`~filt.instanceOf`      | :class:`~modifier.applyTh`       |
+------------------------------------------+---------------------------+------------------------------+-------------------------------+----------------------------------+
| :class:`~structural.joinStreamsRandom`   | :class:`~conv.toRange`    | :class:`~utils.equals`       | :meth:`~filt.inRange`         | :class:`~modifier.applySerial`   |
+------------------------------------------+---------------------------+------------------------------+-------------------------------+----------------------------------+
| :class:`~structural.activeSamples`       | :class:`~conv.toSum`      | :class:`~utils.reverse`      | :class:`~filt.head`           | :class:`~modifier.sort`          |
+------------------------------------------+---------------------------+------------------------------+-------------------------------+----------------------------------+
| :meth:`~structural.table`                | :class:`~conv.toProd`     | :class:`~utils.ignore`       | :meth:`~filt.tail`            | :class:`~modifier.sortF`         |
+------------------------------------------+---------------------------+------------------------------+-------------------------------+----------------------------------+
| :class:`~structural.batched`             | :class:`~conv.toAvg`      | :class:`~utils.rateLimit`    | :class:`~filt.columns`        | :class:`~modifier.consume`       |
+------------------------------------------+---------------------------+------------------------------+-------------------------------+----------------------------------+
| :class:`~structural.window`              | :class:`~conv.toMean`     | :class:`~utils.timeLimit`    | :class:`~filt.cut`            | :class:`~modifier.randomize`     |
+------------------------------------------+---------------------------+------------------------------+-------------------------------+----------------------------------+
| :class:`~structural.groupBy`             | :class:`~conv.toMax`      | :meth:`~utils.tab`           | :class:`~filt.rows`           | :class:`~modifier.stagger`       |
+------------------------------------------+---------------------------+------------------------------+-------------------------------+----------------------------------+
| :class:`~structural.insertColumn`        | :class:`~conv.toMin`      | :meth:`~utils.indent`        | :class:`~filt.intersection`   | :class:`~modifier.op`            |
+------------------------------------------+---------------------------+------------------------------+-------------------------------+----------------------------------+
| :meth:`~structural.insertIdColumn`       | :class:`~conv.toPIL`      | :class:`~utils.clipboard`    | :class:`~filt.union`          | :class:`~modifier.integrate`     |
+------------------------------------------+---------------------------+------------------------------+-------------------------------+----------------------------------+
| :class:`~structural.expandE`             | :class:`~conv.toImg`      | :meth:`~utils.headerIdx`     | :class:`~filt.unique`         |                                  |
+------------------------------------------+---------------------------+------------------------------+-------------------------------+----------------------------------+
| :meth:`~structural.unsqueeze`            | :class:`~conv.toRgb`      | :class:`~utils.deref`        | :class:`~filt.breakIf`        |                                  |
+------------------------------------------+---------------------------+------------------------------+-------------------------------+----------------------------------+
| :class:`~structural.count`               | :class:`~conv.toRgba`     | :class:`~utils.bindec`       | :class:`~filt.mask`           |                                  |
+------------------------------------------+---------------------------+------------------------------+-------------------------------+----------------------------------+
| :class:`~structural.permute`             | :class:`~conv.toBin`      | :class:`~utils.smooth`       |                               |                                  |
+------------------------------------------+---------------------------+------------------------------+-------------------------------+----------------------------------+
| :class:`~structural.accumulate`          | :class:`~conv.toIdx`      | :meth:`~utils.disassemble`   |                               |                                  |
+------------------------------------------+---------------------------+------------------------------+-------------------------------+----------------------------------+
| :class:`~structural.AA_`                 | :class:`~conv.toDict`     | :meth:`~utils.tree`          |                               |                                  |
+------------------------------------------+---------------------------+------------------------------+-------------------------------+----------------------------------+
| :class:`~structural.peek`                | :class:`~conv.toDictF`    | :class:`~utils.lookup`       |                               |                                  |
+------------------------------------------+---------------------------+------------------------------+-------------------------------+----------------------------------+
| :class:`~structural.peekF`               | :class:`~conv.toFloat`    | :class:`~utils.dictFields`   |                               |                                  |
+------------------------------------------+---------------------------+------------------------------+-------------------------------+----------------------------------+
| :class:`~structural.repeat`              | :class:`~conv.toInt`      |                              |                               |                                  |
+------------------------------------------+---------------------------+------------------------------+-------------------------------+----------------------------------+
| :meth:`~structural.repeatF`              |                           |                              |                               |                                  |
+------------------------------------------+---------------------------+------------------------------+-------------------------------+----------------------------------+
| :class:`~structural.repeatFrom`          |                           |                              |                               |                                  |
+------------------------------------------+---------------------------+------------------------------+-------------------------------+----------------------------------+

+-----------------------------+------------------------------+---------------------------+---------------------------+------------------------+
| init                        | output                       | inp                       | kxml                      | nb                     |
+=============================+==============================+===========================+===========================+========================+
| :class:`~init.BaseCli`      | :class:`~output.stdout`      | :meth:`~inp.cat`          | :class:`~kxml.node`       | :meth:`~nb.cells`      |
+-----------------------------+------------------------------+---------------------------+---------------------------+------------------------+
| :class:`~init.Table`        | :class:`~output.tee`         | :meth:`~inp.curl`         | :class:`~kxml.maxDepth`   | :class:`~nb.pretty`    |
+-----------------------------+------------------------------+---------------------------+---------------------------+------------------------+
| :meth:`~init.T`             | :class:`~output.file`        | :meth:`~inp.wget`         | :class:`~kxml.tags`       | :class:`~nb.execute`   |
+-----------------------------+------------------------------+---------------------------+---------------------------+------------------------+
| :meth:`~init.fastF`         | :class:`~output.pretty`      | :meth:`~inp.ls`           | :class:`~kxml.pretty`     |                        |
+-----------------------------+------------------------------+---------------------------+---------------------------+------------------------+
| :class:`~init.serial`       | :meth:`~output.display`      | :class:`~inp.cmd`         | :class:`~kxml.display`    |                        |
+-----------------------------+------------------------------+---------------------------+---------------------------+------------------------+
| :class:`~init.oneToMany`    | :meth:`~output.headOut`      | :meth:`~inp.requireCli`   |                           |                        |
+-----------------------------+------------------------------+---------------------------+---------------------------+------------------------+
| :class:`~init.manyToMany`   | :class:`~output.intercept`   |                           |                           |                        |
+-----------------------------+------------------------------+---------------------------+---------------------------+------------------------+
| :class:`~init.mtmS`         | :class:`~output.split`       |                           |                           |                        |
+-----------------------------+------------------------------+---------------------------+---------------------------+------------------------+

+-------------------------------+---------------------+-------------------------+
| grep                          | kcsv                | trace                   |
+===============================+=====================+=========================+
| :class:`~grep.grep`           | :meth:`~kcsv.cat`   | :class:`~trace.trace`   |
+-------------------------------+---------------------+-------------------------+
| :class:`~grep.grepTemplate`   |                     |                         |
+-------------------------------+---------------------+-------------------------+

